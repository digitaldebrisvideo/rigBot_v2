python("\n\
aToolsZipPath = 'L:\3D\scripts\maya\aTools\aTools.zip'\n\
from maya import cmds, mel\n\
import os, shutil, urllib2, shutil, zipfile\n\
\n\
def hasInternet(url):\n\
   try:\n\
       proxy    = urllib2.ProxyHandler({})\n\
       opener   = urllib2.build_opener(proxy)\n\
       urllib2.install_opener(opener)\n\
       response = urllib2.urlopen(url, timeout=60)\n\
       return True\n\
   except: pass\n\
   return False\n\
\n\
def install():\n\
    if aToolsZipPath.split(os.sep)[-1] != 'aTools.zip' or not os.path.isfile(aToolsZipPath):\n\
        cmds.confirmDialog(message=\"%sCouldn\'t find aTools.zip in this location, installation will stop.\"%os.sep.join(aToolsZipPath.split(os.sep)[:-1]))\n\
        return   \n\
    aToolsOfflineInstall(aToolsZipPath)\n\
\n\
def formatPath(path):\n\
    path = path.replace('/', os.sep)\n\
    path = path.replace('\\\\', os.sep)\n\
    return path\n\
\n\
def download(downloadUrl, saveFile):\n\
    \n\
    if not hasInternet(downloadUrl): \n\
        cmds.warning('Error trying to install.')\n\
        return\n\
        \n\
    try:    response        = urllib2.urlopen(downloadUrl, timeout=60)          \n\
    except: pass\n\
    \n\
    if response is None: \n\
        cmds.warning('Error trying to install.')\n\
        return    \n\
    \n\
    fileSize        = int(response.info().getheaders('Content-Length')[0])\n\
    fileSizeDl      = 0\n\
    blockSize       = 128\n\
    output          = open(saveFile,'wb')    \n\
    progBar         = mel.eval('$tmp = $gMainProgressBar')    \n\
    \n\
    cmds.progressBar( progBar,\n\
                        edit=True,\n\
                        beginProgress=True,\n\
                        status='Downloading aTools...',\n\
                        progress=0,\n\
                        maxValue=100 )    \n\
    \n\
    while True:\n\
        buffer = response.read(blockSize)\n\
        if not buffer:\n\
            output.close()\n\
            cmds.progressBar(progBar, edit=True, progress=100)  \n\
            cmds.progressBar(progBar, edit=True, endProgress=True)          \n\
            break\n\
    \n\
        fileSizeDl += len(buffer)\n\
        output.write(buffer)\n\
        p = float(fileSizeDl) / fileSize *100\n\
        \n\
        cmds.progressBar(progBar, edit=True, progress=p)  \n\
        \n\
    return output\n\
\n\
\n\
def aToolsOfflineInstall(offlineFilePath):\n\
\n\
    mayaAppDir      = mel.eval('getenv MAYA_APP_DIR')    \n\
    aToolsPath      = mayaAppDir + os.sep + 'scripts'\n\
    aToolsFolder    = aToolsPath + os.sep + 'aTools' + os.sep\n\
    tmpZipFile      = '%s%stmp.zip'%(aToolsPath, os.sep)\n\
    offlineFileUrl  = r'file:///%s'%offlineFilePath\n\
        \n\
    if os.path.isfile(tmpZipFile):     os.remove(tmpZipFile)   \n\
    if os.path.isdir(aToolsFolder): shutil.rmtree(aToolsFolder)      \n\
    \n\
    output = download(offlineFileUrl, tmpZipFile)    \n\
    \n\
    zfobj = zipfile.ZipFile(tmpZipFile)\n\
    for name in zfobj.namelist():\n\
        uncompressed = zfobj.read(name)\n\
    \n\
        filename  = formatPath('%s%s%s'%(aToolsPath, os.sep, name))        \n\
        d         = os.path.dirname(filename)\n\
        \n\
        if not os.path.exists(d): os.makedirs(d)\n\
        if filename.endswith(os.sep): continue\n\
        \n\
        output = open(filename,'wb')\n\
        output.write(uncompressed)\n\
        output.close()\n\
        \n\
    zfobj.close()\n\
    if os.path.isfile(tmpZipFile):     os.remove(tmpZipFile)\n\
    from aTools import setup; reload(setup); setup.install([offlineFilePath, False]) \n\
    cmds.evalDeferred(\"from aTools.animTools.animBar import animBarUI; reload(animBarUI); animBarUI.show(\'refresh\')\")     \n\
\n\
\n\
install()");